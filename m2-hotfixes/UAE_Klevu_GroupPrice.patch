diff --git a/vendor/klevu/module-productsearch/Model/Product/Product.php b/vendor/klevu/module-productsearch/Model/Product/Product.php
index e6d3bc8..ddb9a99 100644
--- a/vendor/klevu/module-productsearch/Model/Product/Product.php	2019-04-03 09:37:16.000000000 -0400
+++ b/vendor/klevu/module-productsearch/Model/Product/Product.php	2019-05-03 15:23:04.289288000 -0400
@@ -481,30 +481,20 @@
      */
     protected function getGroupPrices($proData)
     {
-        $groupPrices = $proData->getData('tier_price');
-        if (is_null($groupPrices)) {
-            $attribute = $proData->getResource()->getAttribute('tier_price');
-            if ($attribute) {
-                $attribute->getBackend()->afterLoad($proData);
-                $groupPrices = $proData->getData('tier_price');
-            }
-        }
-
-        if (!empty($groupPrices) && is_array($groupPrices)) {
-            $priceGroupData = [];
-            foreach ($groupPrices as $groupPrice) {
-                if ($this->_storeModelStoreManagerInterface->getStore()->getWebsiteId()== $groupPrice['website_id'] || $groupPrice['website_id']==0) {
-                    if ($groupPrice['price_qty'] == 1) {
-                        $groupPriceKey = $groupPrice['cust_group'];
-                        $groupname = $this->_customerModelGroup->load($groupPrice['cust_group'])->getCustomerGroupCode();
-                        $result['label'] =  $groupname;
-                        $result['values'] =  $groupPrice['website_price'];
-                        $priceGroupData[$groupPriceKey]= $result;
-                    }
-                }
-            }
-            return $priceGroupData;
-        }
+        $customer = \Magento\Framework\App\ObjectManager::getInstance()->create('Magento\Customer\Model\ResourceModel\Group\Collection');
+        $priceGroupData = array();
+        foreach($customer as $type)
+        {
+            $product = \Magento\Framework\App\ObjectManager::getInstance()->create('\Magento\Catalog\Model\Product')->setCustomerGroupId($type->getCustomerGroupId())->load($proData->getId());
+            $final_price = $product->getFinalprice();
+            $processed_final_price = $this->_priceHelper->processPrice($final_price,'final_price',$product,$this->_storeModelStoreManagerInterface->getStore());
+            if($processed_final_price){
+                  $result['label'] = $type->getCustomerGroupCode();
+                  $result['values'] = $processed_final_price;
+                  $priceGroupData[$product->getCustomerGroupId()]= $result;
+              }
+          }
+          return $priceGroupData;
     }
 
-}
\ No newline at end of file
+}
